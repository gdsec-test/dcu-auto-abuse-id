{"swagger": "2.0", "basePath": "/", "paths": {"/classify/classification": {"post": {"responses": {"400": {"description": "Validation Error"}, "401": {"description": "Unauthorized"}, "201": {"description": "Success", "schema": {"$ref": "#/definitions/classification_response"}}}, "summary": "Submit URI for auto detection and classification", "description": "Endpoint to handle intake of URIs reported as possibly containing abuse.\nWrites entry to REDIS using URI as key, which lasts 30 minutes. If another request for\nthe same URI is received within 30 minutes, the REDIS record is returned.", "operationId": "post_intake_resource", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/input"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "security": [{"apikey": []}], "tags": ["classify"]}}, "/classify/classification/{jid}": {"parameters": [{"name": "jid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"404": {"description": "Invalid classification ID"}, "401": {"description": "Unauthorized"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/classification_response"}}}, "summary": "Obtain the results or status of a previously submitted classification request", "description": "Writes entry to REDIS using JID as key, which lasts for 24 hours. Any requests received\nfor the same JID within that 24 hour window will receive the record data from REDIS.", "operationId": "get_classification_result", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "security": [{"apikey": []}], "tags": ["classify"]}}, "/classify/health": {"get": {"responses": {"200": {"description": "OK"}}, "summary": "Health check endpoint", "operationId": "get_health", "tags": ["classify"]}}, "/classify/scan": {"post": {"responses": {"401": {"description": "Unauthorized"}, "400": {"description": "Validation Error"}, "201": {"description": "Success", "schema": {"$ref": "#/definitions/scan_response"}}}, "summary": "Submit URI for scanning and potential Abuse API ticket creation", "description": "Writes entry to REDIS using URI as key, which lasts 30 minutes. If another request for\nthe same URI is received within 30 minutes, the REDIS record is returned.", "operationId": "post_intake_scan", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/scan_input"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "security": [{"apikey": []}], "tags": ["classify"]}}, "/classify/scan/{jid}": {"parameters": [{"name": "jid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"404": {"description": "Invalid scan ID"}, "401": {"description": "Unauthorized"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/scan_response"}}}, "summary": "Obtain the results or status of a previously submitted scan request", "description": "Writes entry to REDIS using JID as key, which lasts for 24 hours. Any requests received\nfor the same JID within that 24 hour window will receive the record data from REDIS.", "operationId": "get_scan_result", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "security": [{"apikey": []}], "tags": ["classify"]}}}, "info": {"title": "DCU Classification API", "version": "1.0", "description": "Classifies URLs/Images based on their detected abuse type"}, "produces": ["application/json"], "consumes": ["application/json"], "securityDefinitions": {"apikey": {"type": "apiKey", "in": "header", "name": "Authorization"}}, "tags": [{"name": "classify", "description": "Abuse classification operations"}], "definitions": {"scan_input": {"required": ["uri"], "properties": {"uri": {"type": "string", "format": "uri", "description": "URI to scan", "example": "http://website.com"}, "sitemap": {"type": "boolean", "default": false}}, "type": "object"}, "scan_response": {"required": ["id", "sitemap", "status", "uri"], "properties": {"id": {"type": "string", "example": "1234"}, "status": {"type": "string", "example": "PENDING", "enum": ["PENDING", "STARTED", "COMPLETE"]}, "uri": {"type": "string", "format": "uri", "description": "URL scanned", "example": "http://website.com"}, "sitemap": {"type": "boolean"}}, "type": "object"}, "input": {"properties": {"uri": {"type": "string", "format": "uri", "description": "URI to classify", "example": "http://website.com"}}, "type": "object"}, "classification_response": {"required": ["candidate", "confidence", "id", "status"], "properties": {"id": {"type": "string", "example": "1234"}, "status": {"type": "string", "example": "PENDING", "enum": ["PENDING", "STARTED", "COMPLETE"]}, "confidence": {"type": "number", "default": 0.0}, "candidate": {"type": "string", "example": "http://example.com"}}, "type": "object"}}, "responses": {"ParseError": {"description": "When a mask can't be parsed"}, "MaskError": {"description": "When any error occurs on mask"}}}
